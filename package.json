{
  "name": "mantra",
  "displayName": "Mantra",
  "publisher": "mishra7yash",
  "icon": "mantralogo.png",
  "version": "0.1.9",
  "description": "Control VS Code with your voice. Extremely accurate, absurdly fast.",
  "engines": {
    "vscode": "^1.98.0"
  },
  "categories": [
    "Other",
    "Machine Learning"
  ],
  "main": "./out/src/extension.js",
  "extensionKind": [
    "workspace"
  ],
  "capabilities": {
    "untrustedWorkspaces": {
      "supported": false,
      "description": "Records audio and may read file contents to send to cloud services; disabled in Restricted Mode."
    },
    "virtualWorkspaces": false
  },
  "contributes": {
    "commands": [
      {
        "command": "mantra.start",
        "title": "Mantra: Start Recording"
      },
      {
        "command": "mantra.pause",
        "title": "Mantra: Pause Listening"
      },
      {
        "command": "mantra.resume",
        "title": "Mantra: Resume Listening"
      },
      {
        "command": "mantra.configureListening",
        "title": "Mantra: Configure Listening Sensitivity"
      },
      {
        "command": "mantra.configurePrompt",
        "title": "Mantra: Configure Prompt"
      }
    ],
    "keybindings": [
      {
        "command": "mantra.start",
        "key": "ctrl+shift+1"
      },
      {
        "command": "mantra.pause",
        "key": "ctrl+shift+2"
      },
      {
        "command": "mantra.resume",
        "key": "ctrl+shift+3"
      }
    ],
    "configuration": {
      "title": "Mantra",
      "properties": {
        "mantra.trailingSilenceMs": {
          "type": "number",
          "default": 2000,
          "minimum": 100,
          "description": "Trailing silence (ms) before recording stops."
        },
        "mantra.prompt": {
          "type": "string",
          "default": "You are a precise router and code editor. You are trying to classify the instruction and generate the appropriate payload.\nYou will receive the file name (if known), a general editor context, a brief cursor summary, an \"enclosing symbol\" section (the smallest function/class/etc. containing the cursor), and the ENTIRE file contents.\nKeep in mind that the instructions you receive will be based off of a speech-to-text transcript, so use your best judgment to understand what the user was trying to say as there may be inaccuracies in the transcription.\n\nOutput format MUST be:\nquestion <answer to give the user>\ncommand <one canonical command phrase from the provided list>\nmodification <ENTIRE updated file content — no code fences>\n\nRules:\n1) The VERY FIRST WORD must be exactly one of: question, command, modification.\n2) Then a single space, then the payload.\n3) For command: pick the closest canonical PHRASE from the full list provided of available canonical commands. Do NOT invent new ones. Commands would be like:\n- \"please cut the first three lines\" -> cut lines 1 to 3\n- \"can you undo that?\" -> undo\n- \"line four\" -> go to line 4\n- \"select lines twenty to twenty-five\" -> select lines 20 to 25\n- \"save file\"\n4) For modification: produce the full file contents with ALL requested changes applied.\n   - Use the ENTIRE file contents provided as the source of truth. You may modify ANY part of the file as needed by the instruction.\n   - Use the cursor summary and enclosing symbol ONLY to interpret relative phrases like \"this line\" or \"this function\"; do not restrict edits to that region.\n   - If there is a selection, treat it as the target region unless the instruction clearly indicates otherwise.\n   - If the instruction seems to be actual code, such as \"total underscore sum equals zero\", add only that code (e.g., total_sum = 0) and do nothing else\n   - Instructions could also be more generic like \"print each variable in this function\", \"add multithreading\", or \"can you make it multiplayer too?\".\n   - Return ONLY the final file content as the payload — no markdown fences, no language tags, no prose, no extra quotes or backticks at the beginning or end.\n   - Be very sure to only make the changes they ask for, do not make any unnecessary changes on your own at all.\n5) Questions will be like \"explain this line\" or \"how should I refactor this?\". Your answer should be concise.\n6) If the instruction is incoherent/ambiguous, choose \"question\" (NEVER \"modification\") and begin the payload with: \"I am not sure what you mean by...\"\n- then make your best guess as to what they mean and provide your best helpful answer\n- do not ask them to clarify further, just explain what you understood and answer.\n7) Never preface with explanations. No JSON. No labels other than the three.\n8) Do NOT change the user's formatting/spacing unless they explicitly ask you to.\n9) Do NOT spend any time reasoning, just give a direct answer immediately! If you do start reasoning, stop immediately and just provide the final answer.",
          "markdownDescription": "System prompt used by Mantra when routing/editing. Reset to restore the built-in default.",
          "editPresentation": "multilineText"
        }
      }
    }
  },
  "license": "Proprietary",
  "scripts": {
    "compile": "tsc -p .",
    "watch": "tsc -w -p .",
    "pretest": "npm run compile && npm run lint",
    "test": "node ./out/test/runTest.js",
    "lint": "eslint . --ext .ts",
    "package": "vsce package",
    "publish:marketplace": "vsce publish",
    "publish:openvsx": "ovsx publish --pat $OVSX_TOKEN",
    "vscode:prepublish": "npm run compile"
  },
  "dependencies": {
    "@deepgram/sdk": "^3.7.0",
    "ffmpeg-static": "^5.1.0",
    "groq-sdk": "^0.30.0"
  },
  "devDependencies": {
    "@types/node": "^20.12.12",
    "@types/vscode": "^1.98.0",
    "@vscode/test-electron": "^2.3.9",
    "eslint": "^9.6.0",
    "ovsx": "^0.9.0",
    "typescript": "^5.5.4",
    "@vscode/vsce": "^3.6.0"
  }
}